#!/usr/bin/env bash

separator=' | '
widgets=()

w_battery() {
	charge="$(cat /sys/class/power_supply/BAT0/capacity 2>/dev/null)"
	status="$(cat /sys/class/power_supply/BAT0/status 2>/dev/null)"

	if [ -z "$status" ]; then
		return
	fi

	if [ "$status" = "Charging" ]; then
		printf "🔌 %s%% %s" "$charge"
	else
		printf "🔋 %s%% %s" "$charge"
	fi
}

handsfree_bluetooth_cache="/tmp/handsfree_bluetooth_cache"

w_bluetooth_battery() {
	local last_modified_time=$(
		stat -c '%Y' "$handsfree_bluetooth_cache" 2>/dev/null || printf '0'
	)
	local now=$(date '+%s')
	local _30_seconds=$(expr 30)
	local ttl_threshold=$(expr $now - $_30_seconds)

	if [ $last_modified_time -gt $ttl_threshold ]; then
		cat "$handsfree_bluetooth_cache"
		return
	fi

	devices="$(bluetoothctl devices Connected | awk '{ print $2 }')"

	ret="$(while read -r device; do
		if [ -z "$device" ]; then
			continue
		fi

		level="$(
			bluetoothctl info "$device" 2>/dev/null |
				grep 'Battery Percentage:' |
				grep -oE '\([0-9]+\)' |
				grep -oE '[0-9]+'
		)"'%'

		if [ "$level" = '%' ]; then
			continue
		fi

		echo "🎧 $level"
	done <<<"$devices" | sed '/^$/d' | tr '\n' ' |')"

	printf "%s" "$ret" >"$handsfree_bluetooth_cache"
	cat "$handsfree_bluetooth_cache"
}

w_cputemp() {
	local sensor_name='coretemp-isa-0000'
	local grp='Package'
	if [ "$(hostname)" = 'black' ]; then
		sensor_name='amdgpu-pci-0e00'
		grp='edge:'
	fi
	local temp="$(
		sensors "$sensor_name" |
			grep "$grp" |
			head -n 1 |
			grep -oE '[0-9]*\.[0-9]..' |
			head -n 1
	)"

	printf "🌡️ %s" "$temp"
}

w_date() {
	printf "📆 %s" "$(date "+%a %d-%m-%y %T")"
}

get_bar() {
	local index=0
	for widget in ${widgets[@]}; do
		local widget_output="$(w_$widget)"

		if [ -z "$widget_output" ]; then
			continue
		fi

		if [ $index -ne 0 ]; then
			printf "%s" "$separator"
		fi

		printf "%s" "$widget_output"

		index=$(expr $index + 1)
	done
}

set_widgets() {
	if islaptop; then
		widgets=('bluetooth_battery' 'cputemp' 'battery' 'date')
	else
		widgets=('bluetooth_battery' 'cputemp' 'date')
	fi
}

main() {
	set_widgets

	while true; do
		res=$(get_bar)
		echo "$res"
		sleep 1
	done
}

main
