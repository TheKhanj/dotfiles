#!/usr/bin/env bash

log() {
	echo "$1" >&2
}

fail() {
	log "$1"
	exit 1
}

start() {
	log 'starting tun0'
	ip tuntap add mode tun dev tun0 || fail 'failed creating tun0 device'
	ip addr add 169.254.10.1/24 dev tun0 || fail 'failed assigning ip to tun0'
	ip link set dev tun0 up || fail 'failed bringing tun0 up'
	log 'started tun0'
	exit 0
}

stop() {
	log 'stopping tun0'
	ip tuntap del dev tun0 mode tun || fail 'failed stopping tun0'
	log 'stopped tun0'
	exit 0
}

get_direct_device() {
	ip route |
		grep '^[0-9]' |
		grep -v '169.254.10.1' |
		head -n 1 |
		grep -oP '(?<=dev )[^ ]*'
}

get_direct_ips() {
	local direct_ips=(1.1.1.1 185.206.95.121 37.152.182.78)

	echo "${direct_ips[@]}"
}

get_device_ip() {
	local dev="$1"

	ip addr show "$dev" |
		grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' |
		head -n 1
}

get_router_ip_from_ip() {
	local ip="$1"

	echo -n "$ip" | sed 's/[0-9]*$/1/'
}

get_direct_router_ip() {
	get_router_ip_from_ip "$(get_device_ip "$(get_direct_device)")"
}

get_tunnel_router_ip() {
	echo -n '169.254.10.1'
}

route() {
	ip route del default
	ip route add default via "$(get_tunnel_router_ip)" dev tun0

	local direct_dev="$(get_direct_device)"
	read -ra direct_ips <<<"$(get_direct_ips)"

	for ip in "${direct_ips[@]}"; do
		ip route add "$ip" via "$(get_direct_router_ip)" dev "$direct_dev"
	done
}

unroute() {
	local direct_dev="$(get_direct_device)"

	ip route del default
	ip route add default via "$(get_direct_router_ip)" dev "$direct_dev"

	read -ra direct_ips <<<"$(get_direct_ips)"

	for ip in "${direct_ips[@]}"; do
		ip route del "$ip" via "$(get_direct_router_ip)" dev "$direct_dev"
	done
}

$1
